<Window x:Class="AsyncExplorer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AsyncExplorer"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:converters="clr-namespace:AsyncExplorer.Converters"
        xmlns:models="clr-namespace:AsyncExplorer.ViewModels"
        mc:Ignorable="d"
        Title="MainWindow" Height="500" Width="600">
    <Window.Resources>
        <converters:BoolToColorConverter x:Key="boolToColorConverter" />
        <converters:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
    </Window.Resources>

    <DockPanel Name="mainPanel">
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem >
                <TextBlock Text="Items:"/>
            </StatusBarItem>
            <StatusBarItem Width="80">
                <TextBlock Text="{Binding SelectedItem.Count}"/>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="Files:"/>
            </StatusBarItem>
            <StatusBarItem >
                <TextBlock Text="{Binding SelectedItem.FilesCount}"/>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="Folders:"/>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="{Binding SelectedItem.FoldersCount}"/>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="Size:"/>
            </StatusBarItem>
            <StatusBarItem >
                <TextBlock Text="{Binding SelectedItem.SizeStr}"/>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="Time Elapsed:"/>
            </StatusBarItem>
            <StatusBarItem >
                <TextBlock Text="{Binding SelectedItem.Elapsed}"/>
            </StatusBarItem>
        </StatusBar>

        <DockPanel x:Name="pnlToolBar" DockPanel.Dock="Top"  
                   FlowDirection="RightToLeft"  
                   HorizontalAlignment="Stretch" 
                   VerticalAlignment="Top" Height="40" 
                   Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" >
            <ListBox VerticalAlignment="Stretch"                       
                     HorizontalAlignment="Stretch"
                     SelectedItem="{Binding SelectedDrive}"
                     ItemsSource ="{Binding Drives}" >
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <DockPanel FlowDirection="LeftToRight" Background="Transparent" HorizontalAlignment="Stretch"  Margin="5"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" Margin="10,0,10,0" MinWidth="10" Background="Transparent"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SetDrive}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ListBox>
        </DockPanel>

        <TreeView  x:Name="treeView"  
                   HorizontalAlignment="Stretch" 
                   VerticalAlignment="Stretch" 
                   HorizontalContentAlignment="Stretch" 
                   FontSize="14"
                   ItemsSource="{Binding Children}"   >
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type models:TreeModel}" ItemsSource="{Binding Children}">
                    <!--<Button Content="{Binding Name}" Command="{Binding GetTreeNodes}" />-->
                    <StackPanel>
                        <TextBlock Text="{Binding Name}" Foreground="{Binding IsDenied, Converter={StaticResource boolToColorConverter}}"/>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding GetNode.CancelCommand}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding GetNode}" 
                                                   CommandParameter="{Binding ElementName=treeView, Path=SelectedItem, IsAsync=True}"/>
                        </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </StackPanel>

                </HierarchicalDataTemplate>
            </TreeView.Resources>
            <i:Interaction.Behaviors>
                <local:BindableSelectedItemBehavior SelectedItem="{Binding SelectedItem, Mode=TwoWay}" />
            </i:Interaction.Behaviors>
            <i:Interaction.Triggers>
                <!--<i:EventTrigger EventName="SelectedItemChanged">
                    <i:InvokeCommandAction Command="{Binding GetNodeSize.CancelCommand}"/>
                    <i:InvokeCommandAction Command="{Binding GetNodeSize}" 
                                           CommandParameter="{Binding ElementName=treeView, Path=SelectedItem, IsAsync=True}"/>
                </i:EventTrigger>-->
            </i:Interaction.Triggers>
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <!--<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />-->
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="Visibility" Value="{Binding HideSystem, Converter={StaticResource boolToVisibilityConverter}}" />
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>

    </DockPanel>
</Window>
